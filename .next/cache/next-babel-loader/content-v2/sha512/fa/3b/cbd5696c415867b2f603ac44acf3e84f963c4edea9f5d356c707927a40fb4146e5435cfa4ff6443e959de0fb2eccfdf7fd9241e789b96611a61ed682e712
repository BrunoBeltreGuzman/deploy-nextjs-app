{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../src/components/Layout\";\nimport fetch from \"isomorphic-fetch\";\n/*\n       Usando isomorphic-fetch\n       isomorphic-fetch Build Status\n       Fetch for node and Browserify.\n*/\n\nexport default function getFetch2(props) {\n  console.log(props.data);\n\n  if (props.data) {\n    return /*#__PURE__*/_jsx(Layout, {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"row p-5\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-md-10 m-auto text-center\",\n          children: [/*#__PURE__*/_jsx(\"h1\", {\n            children: \"Data!\"\n          }), props.data.map(function (json, index) {\n            return /*#__PURE__*/_jsx(\"pre\", {\n              children: /*#__PURE__*/_jsx(\"p\", {\n                children: JSON.stringify(json)\n              })\n            }, index);\n          })]\n        })\n      })\n    });\n  }\n}\n\ngetFetch2.getInitialProps = async function (context) {\n  try {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n    const data = await response.json();\n    console.log(data);\n    return {\n      data: data\n    };\n  } catch (error) {\n    console.log(error);\n    return {};\n  }\n};","map":null,"metadata":{},"sourceType":"module"}