{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/brunodev/Documentos/VS Code Projects/ReactJs/NextJs/AppNextjs/pages/getFetch.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../src/components/Layout\";\nexport default function getFetch() {\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: error,\n    1: setError\n  } = useState([]);\n  useEffect(async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n      const data = await response.json();\n      console.log(data);\n      setData(data);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n      setError(error);\n    }\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row p-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-10 m-auto text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 22\n    }, this);\n  }\n\n  if (data) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row p-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-10 m-auto text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Data!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 43\n          }, this), data.map(function (json, index) {\n            return /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: JSON.stringify(json)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 64\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 57\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 22\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row p-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-10 m-auto text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(error)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 22\n    }, this);\n  }\n}","map":{"version":3,"sources":["/home/brunodev/Documentos/VS Code Projects/ReactJs/NextJs/AppNextjs/pages/getFetch.js"],"names":["React","useState","useEffect","Layout","getFetch","data","setData","loading","setLoading","error","setError","response","fetch","json","console","log","map","index","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAC5B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,YAAY;AACf,QAAI;AACGM,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CACrB,4CADqB,CAA5B;AAGA,YAAMP,IAAI,GAAG,MAAMM,QAAQ,CAACE,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACN,KATD,CASE,OAAOC,KAAP,EAAc;AACTK,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACN;AACP,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAIF,OAAJ,EAAa;AACN,wBACO,QAAC,MAAD;AAAA,6BACO;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACO;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,iCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA,YADP;AASN;;AAED,MAAIF,IAAJ,EAAU;AACH,wBACO,QAAC,MAAD;AAAA,6BACO;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACO;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,kCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,EAEQA,IAAI,CAACW,GAAL,CAAS,UAAUH,IAAV,EAAgBI,KAAhB,EAAuB;AAC1B,gCACO;AAAA,qCACO;AAAA,0BACQC,IAAI,CAACC,SAAL,CACMN,IADN;AADR;AAAA;AAAA;AAAA;AAAA;AADP,eAAUI,KAAV;AAAA;AAAA;AAAA;AAAA,oBADP;AASN,WAVA,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA,YADP;AAoBN;;AAED,MAAIR,KAAJ,EAAW;AACJ,wBACO,QAAC,MAAD;AAAA,6BACO;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACO;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,kCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,eAEO;AAAA,sBAAMS,IAAI,CAACC,SAAL,CAAeV,KAAf;AAAN;AAAA;AAAA;AAAA;AAAA,kBAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA,YADP;AAUN;AACP","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Layout from \"../src/components/Layout\";\n\nexport default function getFetch() {\n       const [data, setData] = useState([]);\n       const [loading, setLoading] = useState(true);\n       const [error, setError] = useState([]);\n\n       useEffect(async () => {\n              try {\n                     setLoading(true);\n                     const response = await fetch(\n                            \"https://jsonplaceholder.typicode.com/posts\"\n                     );\n                     const data = await response.json();\n                     console.log(data);\n                     setData(data);\n                     setLoading(false);\n              } catch (error) {\n                     console.log(error);\n                     setLoading(false);\n                     setError(error);\n              }\n       }, []);\n\n       if (loading) {\n              return (\n                     <Layout>\n                            <div className=\"row p-5\">\n                                   <div className=\"col-md-10 m-auto text-center\">\n                                          <h1>Loading...</h1>\n                                   </div>\n                            </div>\n                     </Layout>\n              );\n       }\n\n       if (data) {\n              return (\n                     <Layout>\n                            <div className=\"row p-5\">\n                                   <div className=\"col-md-10 m-auto text-center\">\n                                          <h1>Data!</h1>\n                                          {data.map(function (json, index) {\n                                                 return (\n                                                        <pre key={index}>\n                                                               <p>\n                                                                      {JSON.stringify(\n                                                                             json\n                                                                      )}\n                                                               </p>\n                                                        </pre>\n                                                 );\n                                          })}\n                                   </div>\n                            </div>\n                     </Layout>\n              );\n       }\n\n       if (error) {\n              return (\n                     <Layout>\n                            <div className=\"row p-5\">\n                                   <div className=\"col-md-10 m-auto text-center\">\n                                          <h1>Error</h1>\n                                          <pre>{JSON.stringify(error)}</pre>\n                                   </div>\n                            </div>\n                     </Layout>\n              );\n       }\n}\n"]},"metadata":{},"sourceType":"module"}