{"ast":null,"code":"import _regeneratorRuntime from \"/home/brunodev/Documentos/VS Code Projects/ReactJs/NextJs/AppNextjs/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/brunodev/Documentos/VS Code Projects/ReactJs/NextJs/AppNextjs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport Layout from \"../../src/components/Layout\";\nimport UserId from \"./UserId\";\nimport { useRouter } from \"next/router\";\nexport default function GetById(props) {\n  var router = useRouter();\n  var id = router.query.id;\n  console.log(id);\n  console.log(props.data);\n\n  if (props.data) {\n    return /*#__PURE__*/_jsx(Layout, {\n      children: /*#__PURE__*/_jsx(UserId, {\n        data: props.data,\n        id: id\n      })\n    });\n  }\n}\n\nGetById.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var id, response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = ctx.query.id;\n            console.log(id);\n            _context.prev = 2;\n            _context.next = 5;\n            return fetch(\"https://jsonplaceholder.typicode.com/posts/\" + id);\n\n          case 5:\n            response = _context.sent;\n            _context.next = 8;\n            return response.json();\n\n          case 8:\n            data = _context.sent;\n            console.log(data);\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", {});\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 13]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}